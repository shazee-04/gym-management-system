package panels;

import connection.MySQL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.table.DefaultTableModel;
import panels.dialog.ManageTrainerDialog;
import util.RoundedUtil;
import java.util.logging.Logger;
import java.util.logging.Level;
import util.LoggerUtil;

/**
 *
 * @author mgssr
 */
public class TrainersPanel extends javax.swing.JPanel {

    public static String totalTrainerCount;
    public static String activeTrainerCount;
    public static String inactiveTrainerCount;

    private static final Logger logger = LoggerUtil.getLogger(TrainersPanel.class);

    /**
     * Creates new form TrainersPanel
     */
    public TrainersPanel() {
        initComponents();
        initCustomizations();
        initPanelData();
    }

    private void initCustomizations() {
        setPaddings();
        setBorderRadius();
    }

    private void setPaddings() {
        statsPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));
    }

    private void setBorderRadius() {
        int radius = 15;

        RoundedUtil.roundedCorners(searchTextField, radius);
        RoundedUtil.roundedCorners(statsPanel, radius);
        RoundedUtil.roundedCorners(tableScrollPane, radius);
    }

//    ----------------------------------
    private void initPanelData() {
        setTableData();
        setStatsPanelData();
    }

    private void setTableData() {
        String query = "SELECT * "
                + "FROM trainer "
                + "LEFT JOIN "
                + "status ON status_id = status_status_id;";

        try {
            DefaultTableModel dtm = (DefaultTableModel) membersTable.getModel();
            dtm.setRowCount(0);
            ResultSet rs = MySQL.executeSearch(query);

            while (rs.next()) {
                Vector<String> dataRow = new Vector();
                dataRow.add(rs.getString("trainer_id"));
                dataRow.add(rs.getString("name"));
                dataRow.add(rs.getString("mobile"));
                dataRow.add(rs.getString("nic"));
                dataRow.add(rs.getString("hired_date"));
                dataRow.add(rs.getBoolean("status_status") ? "ACTIVE" : "INACTIVE");

                dtm.addRow(dataRow);
            }
        } catch (SQLException e) {
            logger.log(Level.SEVERE, "TrainersPanel.setTableData(){} caused an error!", e);
        }
    }

    private void setStatsPanelData() {
        String query = "SELECT "
                + "COUNT(*) AS total_trainers, "
                + "SUM(CASE WHEN status_status = 1 THEN 1 ELSE 0 END) AS active_trainers,"
                + "SUM(CASE WHEN status_status = 0 THEN 1 ELSE 0 END) AS inactive_trainers "
                + "FROM trainer "
                + "LEFT JOIN "
                + "status ON status_id = status_status_id;";

        try {
            ResultSet rs = MySQL.executeSearch(query);

            if (rs.next()) {
                totalTrainerCount = String.format("%02d", rs.getInt("total_trainers"));
                activeTrainerCount = String.format("%02d", rs.getInt("active_trainers"));
                inactiveTrainerCount = String.format("%02d", rs.getInt("inactive_trainers"));
            }
            totalTrainersLabel.setText("Total Trainers:  " + totalTrainerCount);
            activeTrainersLabel.setText("Active Trainers:  " + activeTrainerCount);
            inactiveTrainersLabel.setText("Inactive Trainers:  " + inactiveTrainerCount);
        } catch (SQLException e) {
            logger.log(Level.SEVERE, "TrainersPanel.searchTableData(){} caused an error!", e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        searchBtn = new javax.swing.JButton();
        manageBtn = new javax.swing.JButton();
        statsPanel = new javax.swing.JPanel();
        totalTrainersLabel = new javax.swing.JLabel();
        psudoLabbel4 = new javax.swing.JLabel();
        activeTrainersLabel = new javax.swing.JLabel();
        psudoLabbel3 = new javax.swing.JLabel();
        inactiveTrainersLabel = new javax.swing.JLabel();
        psudoLabbel1 = new javax.swing.JLabel();
        psudoLabbel2 = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        membersTable = new javax.swing.JTable();

        topPanel.setBackground(new java.awt.Color(153, 255, 255));
        topPanel.setOpaque(false);
        topPanel.setLayout(new javax.swing.BoxLayout(topPanel, javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 45));
        jPanel1.setLayout(new java.awt.GridLayout(1, 1));

        searchTextField.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N
        searchTextField.setForeground(new java.awt.Color(204, 204, 204));
        searchTextField.setToolTipText("");
        jPanel1.add(searchTextField);

        topPanel.add(jPanel1);

        jPanel2.setMinimumSize(new java.awt.Dimension(182, 33));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        searchBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.setPreferredSize(new java.awt.Dimension(100, 35));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel2.add(searchBtn);

        manageBtn.setBackground(new java.awt.Color(255, 100, 0));
        manageBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        manageBtn.setText("Manage");
        manageBtn.setPreferredSize(new java.awt.Dimension(100, 35));
        manageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageBtnActionPerformed(evt);
            }
        });
        jPanel2.add(manageBtn);

        topPanel.add(jPanel2);

        statsPanel.setBackground(new java.awt.Color(51, 51, 51));
        statsPanel.setLayout(new java.awt.GridLayout(4, 2, 0, 5));

        totalTrainersLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        totalTrainersLabel.setText("Total Trainers: ");
        statsPanel.add(totalTrainersLabel);

        psudoLabbel4.setFont(totalTrainersLabel.getFont());
        statsPanel.add(psudoLabbel4);

        activeTrainersLabel.setFont(totalTrainersLabel.getFont());
        activeTrainersLabel.setText("Active Trainers: ");
        statsPanel.add(activeTrainersLabel);

        psudoLabbel3.setFont(totalTrainersLabel.getFont());
        statsPanel.add(psudoLabbel3);

        inactiveTrainersLabel.setFont(totalTrainersLabel.getFont());
        inactiveTrainersLabel.setText("Inactive Trainers: ");
        statsPanel.add(inactiveTrainersLabel);
        statsPanel.add(psudoLabbel1);

        psudoLabbel2.setFont(totalTrainersLabel.getFont());
        statsPanel.add(psudoLabbel2);

        membersTable.setAutoCreateRowSorter(true);
        membersTable.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        membersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "MOBILE", "NIC", "HIRED DATE", "STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        membersTable.setColumnSelectionAllowed(false);
        membersTable.setShowGrid(true);
        tableScrollPane.setViewportView(membersTable);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(topPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                    .addComponent(tablePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        getSearchResult();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void manageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageBtnActionPerformed
        ManageTrainerDialog manageTrainerDialog = new ManageTrainerDialog(null, true);
        manageTrainerDialog.setLocationRelativeTo(null);
        manageTrainerDialog.setVisible(true);
        refreshData();
    }//GEN-LAST:event_manageBtnActionPerformed

    private void getSearchResult() {
        String searchText = searchTextField.getText();

        if (!searchText.isBlank()) {
            searchTableData("%" + searchText + "%");
        } else {
            setTableData();
        }
    }

    private void searchTableData(String searchText) {
        String query = "SELECT * "
                + "FROM trainer "
                + "LEFT JOIN "
                + "status ON status_id = status_status_id "
                + "WHERE "
                + "name LIKE '" + searchText + "' OR "
                + "trainer_id LIKE '" + searchText + "' OR "
                + "mobile LIKE '" + searchText + "' OR "
                + "nic LIKE '" + searchText + "';";

        try {
            DefaultTableModel dtm = (DefaultTableModel) membersTable.getModel();
            dtm.setRowCount(0);
            ResultSet rs = MySQL.executeSearch(query);

            while (rs.next()) {
                Vector<String> dataRow = new Vector();
                dataRow.add(rs.getString("trainer_id"));
                dataRow.add(rs.getString("name"));
                dataRow.add(rs.getString("mobile"));
                dataRow.add(rs.getString("nic"));
                dataRow.add(rs.getString("hired_date"));
                dataRow.add(rs.getBoolean("status_status") ? "ACTIVE" : "INACTIVE");

                dtm.addRow(dataRow);
            }
        } catch (SQLException e) {
            logger.log(Level.SEVERE, "TrainersPanel.searchTableData(){} caused an error!", e);
        }
    }

    public void refreshData() {
        setTableData();
        setStatsPanelData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activeTrainersLabel;
    private javax.swing.JLabel inactiveTrainersLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton manageBtn;
    private javax.swing.JTable membersTable;
    private javax.swing.JLabel psudoLabbel1;
    private javax.swing.JLabel psudoLabbel2;
    private javax.swing.JLabel psudoLabbel3;
    private javax.swing.JLabel psudoLabbel4;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel statsPanel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel totalTrainersLabel;
    // End of variables declaration//GEN-END:variables
}
