package panels;

import connection.MySQL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.table.DefaultTableModel;
import util.RoundedUtil;
import java.util.logging.Logger;
import java.util.logging.Level;
import util.LoggerUtil;

/**
 *
 * @author mgssr
 */
public class PaymentRecordsPanel extends javax.swing.JPanel {

    public static String monthlyPaymentTotal;
    public static String noOfPaymentsMade;
    public static String noOfPaymentsDue;

    private static final Logger logger = LoggerUtil.getLogger(PaymentRecordsPanel.class);

    /**
     * Creates new form PaymentRecordsPanel
     */
    public PaymentRecordsPanel() {
        initComponents();
        initCustomizations();
        initPanelData();
    }

    private void initCustomizations() {
        setPaddings();
        setBorderRadius();
    }

    private void setPaddings() {
        statsPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));
    }

    private void setBorderRadius() {
        int radius = 15;

        RoundedUtil.roundedCorners(searchTextField, radius);
        RoundedUtil.roundedCorners(statsPanel, radius);
        RoundedUtil.roundedCorners(tableScrollPane, radius);
    }

//    ------------------------
    private void initPanelData() {
        setTableData();
        setStatsPanelData();
    }

    private void setTableData() {
        String query = "SELECT * "
                + "FROM payment_history "
                + "LEFT JOIN "
                + "member ON member_member_id = member_id ORDER BY date DESC;";

        try {
            DefaultTableModel dtm = (DefaultTableModel) membersTable.getModel();
            dtm.setRowCount(0);
            ResultSet rs = MySQL.executeSearch(query);

            while (rs.next()) {
                Vector<String> dataRow = new Vector();
                dataRow.add(rs.getString("name"));
                dataRow.add(rs.getString("date"));
                dataRow.add(rs.getString("paid_amount"));
                dataRow.add(rs.getString("paid_method"));
                dataRow.add(rs.getString("reference_no"));

                dtm.addRow(dataRow);
            }
        } catch (SQLException e) {
            logger.log(Level.SEVERE, "PaymentRecordsPanel.setTableData(){} caused an error!", e);
        }
    }

    private void setStatsPanelData() {
        String query = "SELECT "
                + "SUM(paid_amount) AS monthly_payments, "
                + "COUNT(paid_amount) AS payments_made "
                + "FROM payment_history "
                + "WHERE date >= DATE_SUB(CURRENT_DATE(), INTERVAL DAYOFMONTH(CURRENT_DATE()) - 1 DAY);";

        try {
            ResultSet rs = MySQL.executeSearch(query);

            if (rs.next()) {
                monthlyPaymentTotal = String.format("%02d", rs.getInt("monthly_payments"));
                noOfPaymentsMade = String.format("%02d", rs.getInt("payments_made"));
            }
            noOfPaymentsDue = String.valueOf(
                    Integer.parseInt(MembersPanel.activeMemberCount) - Integer.parseInt(noOfPaymentsMade));
            totalPayentsLabel.setText("Total Payments:  " + monthlyPaymentTotal + " LKR");
            patmentsMadeLabel.setText("No of Payments Made:  " + noOfPaymentsMade);
            paymentsDueLabel.setText("No of Payments Due:  " + noOfPaymentsDue);
        } catch (SQLException e) {
            logger.log(Level.SEVERE, "PaymentRecordsPanel.setStatsPanelData(){} caused an error!", e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        searchBtn = new javax.swing.JButton();
        statsPanel = new javax.swing.JPanel();
        totalPayentsLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        patmentsMadeLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        paymentsDueLabel = new javax.swing.JLabel();
        psudoLabbel = new javax.swing.JLabel();
        avgTimeLabel = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        membersTable = new javax.swing.JTable();

        topPanel.setBackground(new java.awt.Color(153, 255, 255));
        topPanel.setOpaque(false);
        topPanel.setLayout(new javax.swing.BoxLayout(topPanel, javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setPreferredSize(new java.awt.Dimension(450, 45));
        jPanel1.setLayout(new java.awt.GridLayout(1, 1));

        searchTextField.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N
        searchTextField.setForeground(new java.awt.Color(204, 204, 204));
        searchTextField.setToolTipText("");
        jPanel1.add(searchTextField);

        topPanel.add(jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(80, 35));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        searchBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.setPreferredSize(new java.awt.Dimension(100, 35));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel2.add(searchBtn);

        topPanel.add(jPanel2);

        statsPanel.setBackground(new java.awt.Color(51, 51, 51));
        statsPanel.setLayout(new java.awt.GridLayout(4, 2, 0, 5));

        totalPayentsLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        totalPayentsLabel.setText("Total Payments: ");
        statsPanel.add(totalPayentsLabel);

        dateLabel.setFont(totalPayentsLabel.getFont());
        statsPanel.add(dateLabel);

        patmentsMadeLabel.setFont(totalPayentsLabel.getFont());
        patmentsMadeLabel.setText("No of Payments Made: ");
        statsPanel.add(patmentsMadeLabel);

        timeLabel.setFont(totalPayentsLabel.getFont());
        statsPanel.add(timeLabel);

        paymentsDueLabel.setFont(totalPayentsLabel.getFont());
        paymentsDueLabel.setText("No of Payments Due:");
        statsPanel.add(paymentsDueLabel);

        psudoLabbel.setFont(totalPayentsLabel.getFont());
        statsPanel.add(psudoLabbel);

        avgTimeLabel.setFont(totalPayentsLabel.getFont());
        statsPanel.add(avgTimeLabel);

        membersTable.setAutoCreateRowSorter(true);
        membersTable.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        membersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "DATE", "AMOUNT", "PAID METHOD", "REFERENCE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        membersTable.setCellSelectionEnabled(true);
        membersTable.setShowGrid(true);
        tableScrollPane.setViewportView(membersTable);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(topPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                    .addComponent(tablePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        getSearchResult();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void getSearchResult() {
        String searchText = searchTextField.getText();

        if (!searchText.isBlank()) {
            searchTableData("%" + searchText + "%");
        } else {
            setTableData();
        }
    }

    private void searchTableData(String searchText) {
        String query = "SELECT * "
                + "FROM payment_history "
                + "LEFT JOIN "
                + "member ON member_member_id = member_id "
                + "WHERE "
                + "name LIKE '" + searchText + "' OR "
                + "reference_no LIKE '" + searchText + "';";

        try {
            DefaultTableModel dtm = (DefaultTableModel) membersTable.getModel();
            dtm.setRowCount(0);
            ResultSet rs = MySQL.executeSearch(query);

            while (rs.next()) {
                Vector<String> dataRow = new Vector();
                dataRow.add(rs.getString("name"));
                dataRow.add(rs.getString("date"));
                dataRow.add(rs.getString("paid_amount"));
                dataRow.add(rs.getString("paid_method"));
                dataRow.add(rs.getString("reference_no"));

                dtm.addRow(dataRow);
            }
        } catch (SQLException e) {
            logger.log(Level.SEVERE, "PaymentRecordsPanel.searchTableData(){} caused an error!", e);
        }
    }

    public void refreshData() {
        setTableData();
        setStatsPanelData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avgTimeLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable membersTable;
    private javax.swing.JLabel patmentsMadeLabel;
    private javax.swing.JLabel paymentsDueLabel;
    private javax.swing.JLabel psudoLabbel;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel statsPanel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel totalPayentsLabel;
    // End of variables declaration//GEN-END:variables
}
